// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_HOST")
  directUrl = env("DB_DIRECT_HOST")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Contribute    Contribute[]

  @@map("users")
}

model Contribute {
  id           Int                     @id @default(autoincrement())
  user         User                    @relation(fields: [userId], references: [id])
  userId       String
  tags         ContributeTagRelation[]
  details      ContributeDetail?
  status       String                  @default("DRAFT")
  identityCode String                  @unique
  publishedAt  DateTime?
  lastEditedAt DateTime?
  createdAt    DateTime                @default(now())
  updatedAt    DateTime                @default(now())

  @@map("contributes")
}

model ContributeDetail {
  id           Int        @id @default(autoincrement())
  contribute   Contribute @relation(fields: [contributeId], references: [id])
  contributeId Int        @unique
  title        String
  content      String     @db.Text
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())

  @@map("contribute_details")
}

model ContributeTagRelation {
  id           Int        @id @default(autoincrement())
  contribute   Contribute @relation(fields: [contributeId], references: [id])
  contributeId Int
  tag          Tag        @relation(fields: [tagId], references: [id])
  tagId        Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())

  @@unique([contributeId, tagId])
  @@map("contribute_tag_relations")
}

model Tag {
  id          Int                     @id @default(autoincrement())
  name        String
  description String?                 @default("")
  contributes ContributeTagRelation[]
  createdAt   DateTime                @default(now())
  updatedAt   DateTime                @default(now())

  @@map("tags")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
